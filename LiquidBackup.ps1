echo "
####       ####    ## ##   ##  ###    ####   ### ##   ###  ##    ####   ### ##   ### ##   ### ###  ### ##
 ##         ##    ##   ##  ##   ##     ##     ##  ##   ##  ##     ##     ##  ##   ##  ##   ##  ##   ##  ##
 ##         ##    ##   ##  ##   ##     ##     ##  ##   ##  ##     ##     ##  ##   ##  ##   ##       ##  ##
 ##         ##    ##   ##  ##   ##     ##     ##  ##   ## ###     ##     ##  ##   ##  ##   ## ##    ## ##
 ##         ##    ##   ##  ##   ##     ##     ##  ##   ##  ##     ##     ##  ##   ##  ##   ##       ## ##
 ##  ##     ##    ##  ##   ##   ##     ##     ##  ##   ##  ##     ##     ##  ##   ##  ##   ##  ##   ##  ##
### ###    ####    ##  ##   ## ##     ####   ### ##   ###  ##    ####   ### ##   ### ##   ### ###  #### ##


"

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—É—Ç–µ–π
$SCRIPT_DIR = Split-Path -Parent $MyInvocation.MyCommand.Definition
$CONFIG_FILE = Join-Path $SCRIPT_DIR ".minecraft_backup_config"

# –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–∑ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏, –µ—Å–ª–∏ —Ç–∞–∫–æ–≤–æ–π –∏–º–µ–µ—Ç—Å—è
if (Test-Path $CONFIG_FILE) {
    $config = Get-Content $CONFIG_FILE | ConvertFrom-StringData
    $SOURCE = $config.SOURCE
    $BACKUP = $config.BACKUP
}

# –ü–µ—Ä–≤–∏—á–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
if (-not $SOURCE) {
    $INITIALIZED = $false
} else {
    $INITIALIZED = $true
}

# –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–≤–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
function FirstRun {
    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–æ—Å–∏–º –≤—ã–±—Ä–∞—Ç—å –ø—É—Ç–∏
    Write-Host "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ LiquidHidder! –í—ã–±–µ—Ä–∏—Ç–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—É—Ç–∏."

    # –ü—É—Ç—å –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π
    $BACKUP_PATH = Read-Host "üìÇ –£–∫–∞–∂–∏—Ç–µ –ø–∞–ø–∫—É –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π ($BACKUP)"
    if ($BACKUP_PATH -and $BACKUP_PATH -ne $BACKUP) {
        $BACKUP = $BACKUP_PATH
    }

    # –ü–æ–∏—Å–∫ –ø–∞–ø–∫–∏ gameDir
    Write-Host "üîç –ü–æ–∏—Å–∫ –ø–∞–ø–∫–∏ 'gameDir'..."
    $SEARCH_RESULT = Get-ChildItem -Path $env:USERPROFILE -Recurse -Directory -Filter "gameDir"

    if ($SEARCH_RESULT.Count -eq 0) {
        Write-Host "‚ö†Ô∏è –ü–∞–ø–∫–∞ 'gameDir' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞."
        return 1
    } elseif ($SEARCH_RESULT.Count -gt 1) {
        Write-Host "üí¨ –ù–∞–π–¥–µ–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–∞–ø–æ–∫ 'gameDir':"
        for ($i = 0; $i -lt $SEARCH_RESULT.Count; $i++) {
            Write-Host "$($i+1)) $($SEARCH_RESULT[$i].FullName)"
        }

        while ($true) {
            $CHOICE = Read-Host "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –Ω—É–∂–Ω–æ–π –ø–∞–ø–∫–∏"

            if ($CHOICE -match '^\d+$' -and $CHOICE -ge 1 -and $CHOICE -le $SEARCH_RESULT.Count) {
                $GAMEDIR = $SEARCH_RESULT[$CHOICE-1].FullName
                $SOURCE = Split-Path -Parent $GAMEDIR # –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è
                break
            } else {
                Write-Host "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
            }
        }
    } else {
        $GAMEDIR = $SEARCH_RESULT[0].FullName
        $SOURCE = Split-Path -Parent $GAMEDIR
    }

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    @"
SOURCE=$SOURCE
BACKUP=$BACKUP
"@ | Out-File $CONFIG_FILE

    $INITIALIZED = $true
}

# –§—É–Ω–∫—Ü–∏—è –º–µ–Ω—é
function Menu {
    Write-Host "–ú–µ–Ω—é:"
    Write-Host "1) –°–¥–µ–ª–∞—Ç—å –±—ç–∫–∞–ø (–∏–∑ $SOURCE ‚Üí $BACKUP)"
    Write-Host "2) –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑ –±—ç–∫–∞–ø–∞ (–∏–∑ $BACKUP ‚Üí $SOURCE)"
    Write-Host "3) –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—É—Ç–µ–π"
    $choice = Read-Host "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1/2/3)"

    switch ($choice) {
        1 {
            BackupData
        }
        2 {
            RestoreData
        }
        3 {
            Remove-Item $CONFIG_FILE -Force # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            FirstRun # –í—ã–ø–æ–ª–Ω—è–µ–º –Ω–æ–≤—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É
            Menu # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é
        }
        default {
            Write-Host "‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤—ã–±–æ—Ä."
        }
    }
}

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –±—ç–∫–∞–ø–∞
function BackupData {
    if (-not (Test-Path $BACKUP)) {
        New-Item -ItemType Directory -Path $BACKUP | Out-Null
    }
    Write-Host "üîÑ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞..."
    # –ò—Å–∫–ª—é—á–∞–µ–º —Å–∞–º—É –ø–∞–ø–∫—É '.LiquidBounce', –∫–æ–ø–∏—Ä—É—è —Ç–æ–ª—å–∫–æ –µ—ë —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    Copy-Item -Path "$SOURCE\*" -Destination $BACKUP -Recurse -Force
    Write-Host "‚úÖ –ë—ç–∫–∞–ø —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!"
}

# –§—É–Ω–∫—Ü–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
function RestoreData {
    Write-Host "üîÑ –ù–∞—á–∏–Ω–∞—é –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ..."
    # –ö–ª–æ–Ω–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –≤ —Ü–µ–ª–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    Copy-Item -Path "$BACKUP\*" -Destination $SOURCE -Recurse -Force
    Write-Host "‚úÖ –î–∞–Ω–Ω—ã–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!"
}

# –ì–ª–∞–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
if (-not $INITIALIZED) {
    FirstRun
}

if ($INITIALIZED) {
    Menu
} else {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫."
    exit 1
}
